<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">
    <!-- append标签相关配置是用于项目部署发布到云服务器上时的参数-->
    <!--云服务器上日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为applogs目录做日志存放的目录 -->
<!--    <property name="home" value="/data/logs/weiyada"/>-->
    <!-- mac 下路径-->
    <property name="home" value="/Users/codemao/Documents/data/logs/weiyada" />

    <!-- windows 下路径-->
<!--    <property name="home" value="M:/data/logs/weiyada" />-->
    <!-- 日志输出格式 -->
    <property name="pattern"
              value="%d{yyyy-MM-dd HH:mm:ss} %p [Class:%C{1}->Thread:%t] %m %n"/>

    <!-- 控制台日志：输出全部日志到控制台 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${pattern}</Pattern>
        </encoder>
    </appender>

    <!-- 文件日志：输出全部日志到文件 -->
    <appender name="FILE_ALL"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${home}/wyd_all.%d{yyyyMMdd}-%i.log</fileNamePattern>
<!--            <fileNamePattern>${home}/wyd_all.log</fileNamePattern>-->
            <maxHistory>5</maxHistory>
            <!--
          当日志文件超过maxFileSize指定的大小是，根据上面提到的%i进行日志文件滚动
          注意此处配置SizeBasedTriggeringPolicy是无法实现按文件大小进行滚动的，必须配置timeBasedFileNamingAndTriggeringPolicy
          -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 错误日志：用于将错误日志输出到独立文件 -->
    <appender name="FILE_ERROR"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${home}/wyd_error.%d{yyyyMMdd}-%i.log</fileNamePattern>
            <maxHistory>5</maxHistory>
            <!--
                当日志文件超过maxFileSize指定的大小是，根据上面提到的%i进行日志文件滚动
                注意此处配置SizeBasedTriggeringPolicy是无法实现按文件大小进行滚动的，必须配置timeBasedFileNamingAndTriggeringPolicy
            -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
    </appender>

    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE_ALL"/>
        <appender-ref ref="FILE_ERROR"/>
    </root>

    <!-- 可以指定多个，指定包下的日志输出级别。例如com.luntek属于项目包的输出日志级别 -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.apache.http.wire" level="INFO"/>

</configuration>
